---
import SunIcon from '@/components/icons/SunIcon.astro'
import MoonIcon from '@/components/icons/MoonIcon.astro'
---

<div>
	<button
		transition:persist
		id='theme-toggle-btn'
		class='borde-none flex appearance-none transition hover:scale-125'
	>
		<span class='sr-only'>Elige el tema</span>
		<SunIcon
			id='light'
			class='theme-toggle-icon size-7 text-gray-800/70 transition-all'
		/>
		<MoonIcon
			id='dark'
			class='theme-toggle-icon absolute size-6 text-gray-800/70 transition-all dark:text-gray-400'
		/>
	</button>

	<script is:inline>
		let remove = null
		const matchMedia = window.matchMedia('(prefers-color-scheme: dark)')

		const getThemePreference = () => {
			if (typeof localStorage !== 'undefined') {
				return localStorage.getItem('theme') ?? 'light' // Default to 'light' if nothing is saved
			}
			return 'light' // Fallback in case of no preference in localStorage
		}

		const updateIcon = themePreference => {
			document.querySelectorAll('.theme-toggle-icon').forEach(element => {
				element.style.scale = element.id === themePreference ? '1' : '0'
			})
		}

		const updateTheme = () => {
			if (remove != null) {
				remove()
			}
			matchMedia.addEventListener('change', updateTheme)
			remove = () => {
				matchMedia.removeEventListener('change', updateTheme)
			}

			const themePreference = getThemePreference()
			const isDark = themePreference === 'dark'

			updateIcon(themePreference)
			document.documentElement.classList[isDark ? 'add' : 'remove']('dark')
		}

		updateTheme()

		document.getElementById('theme-toggle-btn').addEventListener('click', e => {
			const currentTheme = getThemePreference()
			const newTheme = currentTheme === 'light' ? 'dark' : 'light'
			localStorage.setItem('theme', newTheme)
			updateTheme()
		})

		document.addEventListener('astro:after-swap', () => {
			updateTheme()
			window.scrollTo({ left: 0, top: 0, behavior: 'instant' })
		})
	</script>
</div>
